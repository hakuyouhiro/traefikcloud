version: '3.3'


########################### SECRETS
secrets:
  cloudflare_email:
    file: $SECRETSDIR/cloudflare_email
  cloudflare_global_api_token:
    file: $SECRETSDIR/cloudflare_global_api_token
  cloudflare_dns_api_token:
    file: $SECRETSDIR/cloudflare_api_token
  cloudflare_zone_api_token:
    file: $SECRETSDIR/cloudflare_zone_api_token
    
########################### networks
networks:
  traefik-proxy:
    external: true
########################### SERVICES
services:
  ############################ FRONTENDS
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/traefik.log:/var/log/traefik.log
    environment:
      - CF_API_EMAIL_FILE=/run/secrets/cloudflare_email
      - CF_API_KEY_FILE=/run/secrets/cloudflare_global_api_token
      #- CLOUDFLARE_DNS_API_TOKEN=/run/secrets/cloudflare_dns_api_token
      #- CLOUDFLARE_ZONE_API_TOKEN=/run/secrets/cloudflare_zone_api_token
    secrets:
      - cloudflare_email
      - cloudflare_global_api_token
      #- cloudflare_dns_api_token 
      #- cloudflare_zone_api_token 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.traefik.basicauth.usersfile=./traefikdashboardfile"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=letsEncryptDNS"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.$DOMAINNAME"
      - "traefik.http.routers.traefik-secure.service=api@internal"

# Portainer - 
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=http"
      #- "traefik.http.routers.portainer.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer.rule=Host(`portainer.decentralization.wtf`)"
      - "traefik.http.routers.portainer.middlewares=traefik-https-redirect"
      - "traefik.http.routers.portainer-secure.entrypoints=https"
      #- "traefik.http.routers.portainer-secure.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.decentralization.wtf`)"
      - "traefik.http.routers.portainer-secure.tls=true"
      - "traefik.http.routers.portainer-secure.tls.certresolver=letsEncryptHttp"
      - "traefik.http.routers.portainer-secure.service=portainer"     
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
     
  
